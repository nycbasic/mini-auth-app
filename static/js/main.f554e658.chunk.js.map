{"version":3,"sources":["helpers/set-token.js","actions/Auth.js","actions/Types.js","components/Navbar.jsx","actions/Errors.js","hoc/private.jsx","components/Home.jsx","actions/Flash.js","components/common/TextField.jsx","components/authentication/Signup.jsx","components/authentication/Login.jsx","components/common/Spinner.jsx","components/Dashboard.jsx","components/pw-reset/Reset.jsx","actions/Reset.js","components/pw-reset/Reset-Form.jsx","reducers/auth.js","reducers/errors.js","reducers/flash.js","reducers/reset.js","reducers/index.js","helpers/validation.js","redux-store.js","components/App.jsx","serviceWorker.js","index.js"],"names":["setAuthHeader","token","axios","defaults","headers","common","createUser","newUser","callback","dispatch","post","then","res","data","localStorage","setItem","setCurrentUser","JwtDecode","push","catch","err","console","log","type","payload","response","user","logoutUser","clear","Navbar","_this$props$auth","this","props","auth","isAuthenticated","react_default","a","createElement","className","Link","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","src","avatar","alt","name","style","width","marginRight","title","Fragment","Component","connect","state","clearErrors","_ref","component","rest","Object","objectWithoutProperties","Route","assign","render","Redirect","Home","react_animated_css_lib","animationIn","clearFlashMsg","TextField","placeholder","value","error","info","onChange","onSelect","disabled","htmlFor","Signup","handleSignUpSubmit","e","preventDefault","_this$props","_this","signUpFullName","signUpEmail","signUpPassword","signUpPassword2","onCreateUser","fullName","email","password","password2","history","_this$props2","_this$props$errors","errors","_this$props3","onSelectClear","onFieldChange","onSignUpFieldClear","onSubmit","common_TextField","Login","handleLoginSubmit","loginEmail","loginPassword","loginUser","msg","flash","animationOut","build_default","duration","Spinner","role","Dashboard","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","_this$props$auth$user","loading","common_Spinner","deleteUser","delete","concat","Password","handleResetSubmit","resetEmail","resetUser","ResetForm","handleChange","setState","defineProperty","target","handleSelect","_this$state","match","resetPassword","params","loadReset","newProps","_this$state2","_this$props$reset","reset","validToken","expiredToken","get","_res$data","newPassword","INIT","combineReducers","val","length","undefined","action","objectSpread","keys","trim","middleWare","thunk","store","createStore","reducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","handleFieldChange","handleClearSelectErrors","handleClearSignUp","jwt","JwtDecoded","authCheck","_this2","BrowserRouter","components_Navbar","Switch","exact","path","authentication_Signup","authentication_Login","Reset","hoc_private","Boolean","location","hostname","ReactDOM","es","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f554e658.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport function setAuthHeader(token) {\n  if (token) {\n    return (axios.defaults.headers.common[\"Authorization\"] = token);\n  } else {\n    return delete axios.defaults.headers.common[\"Authorization\"];\n  }\n}\n","import axios from \"axios\";\nimport JwtDecode from \"jwt-decode\";\nimport { SET_CURRENT_USER, GET_ERRORS, FLASH_MSG } from \"./Types\";\nimport { setAuthHeader } from \"../helpers/set-token\";\n\nexport const createUser = (newUser, callback) => dispatch => {\n  axios\n    .post(\"/api/users/signup\", newUser)\n    .then(res => {\n      const { token } = res.data;\n      setAuthHeader(token);\n      localStorage.setItem(\"jwt\", token);\n      dispatch(setCurrentUser(JwtDecode(token)));\n      callback.push(\"/dashboard\");\n    })\n    .catch(err => {\n      console.log(err);\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n\nexport const loginUser = (user, callback) => dispatch => {\n  axios\n    .post(\"/api/users/login\", user)\n    .then(res => {\n      if (res.data.msg) {\n        dispatch({\n          type: FLASH_MSG,\n          payload: res.data\n        });\n      } else {\n        const { token } = res.data;\n        setAuthHeader(token);\n        localStorage.setItem(\"jwt\", token);\n        dispatch(setCurrentUser(JwtDecode(token)));\n        callback.push(\"/dashboard\");\n      }\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n\nexport const deleteUser = id => dispatch => {\n  axios\n    .delete(`/api/users/${id}`)\n    .then(res => {\n      setAuthHeader(false);\n      localStorage.clear();\n      dispatch({\n        type: SET_CURRENT_USER,\n        payload: {}\n      });\n      dispatch({\n        type: FLASH_MSG,\n        payload: res.data\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n\nexport const setCurrentUser = user => dispatch => {\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: user\n  });\n};\n\nexport const logoutUser = () => dispatch => {\n  setAuthHeader(false);\n  localStorage.clear();\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};\n","export const SET_CURRENT_USER = \"SET_CURRENT_USER\",\n  GET_ERRORS = \"GET_ERRORS\",\n  CLEAR_ERRORS = \"CLEAR_ERRORS\",\n  FLASH_MSG = \"FLASH_MSG\",\n  CLEAR_MSG = \"CLEAR_MSG\",\n  VALID_RESET_TOKEN = \"VALID_RESET_TOKEN\",\n  INVALID_RESET_TOKEN = \"INVALID_RESET_TOKEN\",\n  INVALID_RESET_MSG = \"INVALID_RESET_MSG\";\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../actions/Auth\";\n\nclass Navbar extends Component {\n  render() {\n    const { isAuthenticated, user } = this.props.auth;\n    const { logoutUser } = this.props;\n    return (\n      <nav className=\"navbar navbar-expand-lg\">\n        <div className=\"container\">\n          <Link\n            className=\"navbar-brand\"\n            to={!isAuthenticated ? \"/\" : \"/dashboard\"}\n          >\n            Auth Connector\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav ml-auto\">\n              {!isAuthenticated ? (\n                <React.Fragment>\n                  <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/signup\">\n                      Signup\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/login\">\n                      Log-in\n                    </Link>\n                  </li>\n                </React.Fragment>\n              ) : (\n                <li className=\"nav-item\">\n                  <Link\n                    onClick={() => {\n                      logoutUser();\n                    }}\n                    className=\"nav-link\"\n                    to=\"/login\"\n                  >\n                    <img\n                      className=\"rounded-circle\"\n                      src={user.avatar}\n                      alt={user.name}\n                      style={{ width: \"25px\", marginRight: \"5px\" }}\n                      title=\"You must have a Gravatar connected to your email to display an image\"\n                    />\n                    Logout\n                  </Link>\n                </li>\n              )}\n            </ul>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Navbar);\n","import { CLEAR_ERRORS } from \"./Types\";\n\nexport const clearErrors = () => dispatch => {\n  return dispatch({\n    type: CLEAR_ERRORS,\n    payload: {}\n  });\n};\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst Private = ({ component: Component, auth, ...rest }) => {\n  const { isAuthenticated } = auth;\n  if (isAuthenticated) {\n    return <Route {...rest} render={props => <Component {...props} />} />;\n  }\n  return <Redirect to=\"/login\" />;\n};\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n}\n\nexport default connect(mapStateToProps)(Private);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Animated } from \"react-animated-css\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"home\">\n          <Animated animationIn=\"bounceInUp\">\n            <div className=\"container\">\n              <h1>Welcome to Auth Connector</h1>\n              <p>\n                A simple application that creates an account, and logs you in.\n                This app also features password reset, failed login reset,\n                character validation, and sessions.\n              </p>\n              <Link to=\"/signup\" className=\"btn btn-primary\">\n                Sign-Up\n              </Link>\n              <Link to=\"/login\" className=\"btn btn-primary\">\n                Log-in\n              </Link>\n            </div>\n          </Animated>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Home;\n","import { CLEAR_MSG } from \"./Types\";\n\nexport const clearFlashMsg = () => dispatch => {\n  return dispatch({\n    type: CLEAR_MSG,\n    payload: \"\"\n  });\n};\n","import React from \"react\";\n\nconst TextField = props => {\n  const {\n    name,\n    placeholder,\n    value,\n    error,\n    info,\n    type,\n    onChange,\n    onSelect,\n    disabled,\n    title\n  } = props;\n  return (\n    <div className=\"form-group\">\n      {title && <label htmlFor={title}>{title}</label>}\n      <input\n        type={type}\n        className={error ? \"is-invalid form-control\" : \"form-control\"}\n        placeholder={placeholder}\n        onSelect={onSelect}\n        onChange={onChange}\n        name={name}\n        value={value}\n        disabled={disabled}\n      />\n      {error\n        ? error && <div className=\"invalid-feedback\">{error}</div>\n        : info && <small className=\"form-text text-muted\">{info}</small>}\n    </div>\n  );\n};\n\nexport default TextField;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createUser } from \"../../actions/Auth\";\nimport { clearErrors } from \"../../actions/Errors\";\nimport { clearFlashMsg } from \"../../actions/Flash\";\nimport TextFieldInput from \"../../components/common/TextField\";\nimport { Animated } from \"react-animated-css\";\n\nclass Signup extends Component {\n  componentWillMount() {\n    const { clearErrors, clearFlashMsg } = this.props;\n    clearErrors();\n    clearFlashMsg();\n  }\n\n  handleSignUpSubmit = e => {\n    e.preventDefault();\n    const {\n      signUpFullName,\n      signUpEmail,\n      signUpPassword,\n      signUpPassword2\n    } = this.props;\n    const { onCreateUser } = this.props;\n    const newUser = {\n      fullName: signUpFullName,\n      email: signUpEmail,\n      password: signUpPassword,\n      password2: signUpPassword2\n    };\n    onCreateUser(newUser, this.props.history);\n  };\n\n  render() {\n    const { fullName, email, password, password2 } = this.props.errors;\n    const {\n      onSelectClear,\n      onFieldChange,\n      onSignUpFieldClear,\n      signUpFullName,\n      signUpEmail,\n      signUpPassword,\n      signUpPassword2\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <Animated animationIn=\"bounceInLeft\">\n          <div className=\"signup\">\n            <div className=\"container\">\n              <form onSubmit={this.handleSignUpSubmit}>\n                <h3>Please Sign Up!</h3>\n                <TextFieldInput\n                  title=\"Full Name\"\n                  type=\"text\"\n                  name=\"fullName\"\n                  placeholder=\"Enter Your Full Name\"\n                  value={signUpFullName}\n                  onChange={onFieldChange}\n                  onSelect={onSelectClear}\n                  error={fullName}\n                />\n                <TextFieldInput\n                  title=\"Email Address\"\n                  type=\"text\"\n                  name=\"email\"\n                  placeholder=\"Enter your email address\"\n                  value={signUpEmail}\n                  onChange={onFieldChange}\n                  onSelect={onSelectClear}\n                  info=\"We'll never share your email with anyone else\"\n                  error={email}\n                />\n                <TextFieldInput\n                  title=\"Password\"\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Enter your password\"\n                  value={signUpPassword}\n                  onChange={onFieldChange}\n                  onSelect={onSelectClear}\n                  info=\"Use 8 or more characters with a mix of letters, numbers & symbols\"\n                  error={password}\n                />\n                <TextFieldInput\n                  title=\"Confirm Password\"\n                  type=\"password\"\n                  name=\"password2\"\n                  placeholder=\"Please confirm your password\"\n                  value={signUpPassword2}\n                  onChange={onFieldChange}\n                  onSelect={onSelectClear}\n                  info={\"Please make sure your confirmation password matches\"}\n                  error={password2}\n                />\n\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Submit\n                </button>\n                <button onClick={onSignUpFieldClear} className=\"btn btn-danger\">\n                  Reset\n                </button>\n              </form>\n            </div>\n          </div>\n        </Animated>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { createUser, clearErrors, clearFlashMsg }\n)(Signup);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { loginUser } from \"../../actions/Auth\";\nimport { clearErrors } from \"../../actions/Errors\";\nimport { clearFlashMsg } from \"../../actions/Flash\";\nimport TextFieldInput from \"../../components/common/TextField\";\nimport FlashMessage from \"react-flash-message\";\nimport { Animated } from \"react-animated-css\";\n\nclass Login extends Component {\n  handleLoginSubmit = e => {\n    e.preventDefault();\n    const { loginEmail, loginPassword } = this.props;\n    const { loginUser, clearErrors, clearFlashMsg } = this.props;\n    loginUser(\n      { email: loginEmail, password: loginPassword },\n      this.props.history\n    );\n    clearErrors();\n    clearFlashMsg();\n  };\n\n  render() {\n    const { email, password } = this.props.errors;\n    const { msg } = this.props.flash;\n    const {\n      onFieldChange,\n      onSelectClear,\n      loginEmail,\n      loginPassword\n    } = this.props;\n    return (\n      <React.Fragment>\n        <div className=\"login\">\n          <div className=\"container\">\n            <div className=\"flash\">\n              {msg && (\n                <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\n                  <FlashMessage duration={4000}>\n                    <div className=\"alert alert-success\">{msg}</div>\n                  </FlashMessage>\n                </Animated>\n              )}\n            </div>\n            <Animated animationIn=\"bounceInUp\">\n              <form onSubmit={this.handleLoginSubmit}>\n                <h3>Please Log-in!</h3>\n                <TextFieldInput\n                  title=\"Email Address\"\n                  type=\"text\"\n                  name=\"email\"\n                  placeholder=\"Enter your email address\"\n                  value={loginEmail}\n                  onSelect={onSelectClear}\n                  onChange={onFieldChange}\n                  error={email}\n                />\n                <TextFieldInput\n                  title=\"Password\"\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Enter your password\"\n                  value={loginPassword}\n                  onChange={onFieldChange}\n                  onSelect={onSelectClear}\n                  error={password}\n                />\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Log-in\n                </button>\n                <small className=\"form-text text-muted\">\n                  Forgot your <Link to=\"/password\">password</Link>?\n                </small>\n              </form>\n            </Animated>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    flash: state.flash\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { loginUser, clearErrors, clearFlashMsg }\n)(Login);\n","import React from \"react\";\n\nconst Spinner = () => {\n  return (\n    <div className=\"spinner\">\n      <div className=\"d-flex justify-content-center\">\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Animated } from \"react-animated-css\";\nimport { deleteUser } from \"../actions/Auth\";\nimport Spinner from \"./common/Spinner\";\n\nexport class Dashboard extends Component {\n  render() {\n    const { fullName, avatar, id } = this.props.auth.user;\n    const { loading, isAuthenticated } = this.props.auth;\n    if (loading || !isAuthenticated) {\n      return <Spinner />;\n    }\n    return (\n      <div className=\"dashboard\">\n        <Animated animationIn=\"bounceIn\">\n          <div className=\"container\">\n            <h1>Welcome {fullName}!</h1>\n            <img\n              className=\"rounded-circle\"\n              src={avatar}\n              alt={fullName}\n              style={{ width: \"150px\", marginRight: \"5px\" }}\n              title=\"You must have a Gravatar connected to your email to display an image\"\n            />\n            <p>\n              {fullName}! Thank you for sigining up! You've successfully logged\n              into the app!\n            </p>\n            <button\n              onClick={() => this.props.deleteUser(id)}\n              className=\"btn btn-danger\"\n            >\n              Delete User\n            </button>\n          </div>\n        </Animated>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { deleteUser }\n)(Dashboard);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport TextFieldInput from \"../../components/common/TextField\";\nimport { clearErrors } from \"../../actions/Errors\";\nimport { clearFlashMsg } from \"../../actions/Flash\";\nimport { resetUser } from \"../../actions/Reset\";\nimport FlashMessage from \"react-flash-message\";\nimport { Animated } from \"react-animated-css\";\n\nclass Password extends Component {\n  componentWillMount() {\n    const { clearErrors, clearFlashMsg } = this.props;\n    clearErrors();\n    clearFlashMsg();\n  }\n\n  handleResetSubmit = e => {\n    e.preventDefault();\n    const { resetEmail, resetUser } = this.props;\n    const email = {\n      email: resetEmail\n    };\n    resetUser(email);\n  };\n\n  render() {\n    const { resetEmail, onFieldChange, onSelectClear, errors } = this.props;\n    const { msg } = this.props.flash;\n    return (\n      <div className=\"reset\">\n        <div className=\"container\">\n          <div className=\"flash\">\n            {msg && (\n              <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\n                <FlashMessage duration={4000}>\n                  <div className=\"alert alert-success\">{msg}</div>\n                </FlashMessage>\n              </Animated>\n            )}\n          </div>\n          <Animated animationIn=\"bounceIn\">\n            <form onSubmit={this.handleResetSubmit}>\n              <h3>Password Reset</h3>\n              <TextFieldInput\n                title=\"Enter your email address\"\n                name=\"email\"\n                value={resetEmail}\n                info=\"Make sure your email address already exist!\"\n                type=\"text\"\n                onChange={onFieldChange}\n                onSelect={onSelectClear}\n                error={errors.email}\n              />\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit\n              </button>\n            </form>\n          </Animated>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    flash: state.flash\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { resetUser, clearErrors, clearFlashMsg }\n)(Password);\n","import axios from \"axios\";\nimport {\n  FLASH_MSG,\n  GET_ERRORS,\n  VALID_RESET_TOKEN,\n  INVALID_RESET_MSG,\n  INVALID_RESET_TOKEN\n} from \"./Types\";\n\nimport { clearErrors } from \"./Errors\";\nimport { clearFlashMsg } from \"./Flash\";\n\nexport const resetUser = email => dispatch => {\n  dispatch(clearErrors());\n  dispatch(clearFlashMsg());\n  axios\n    .post(\"/api/users/forgot\", email)\n    .then(res => {\n      dispatch({\n        type: FLASH_MSG,\n        payload: res.data\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n\nexport const loadReset = token => dispatch => {\n  axios\n    .get(`/api/users/reset/${token}`)\n    .then(res => {\n      const { validToken, expiredToken, msg } = res.data;\n      if (validToken) {\n        dispatch({\n          type: VALID_RESET_TOKEN,\n          payload: validToken\n        });\n      } else if (expiredToken) {\n        dispatch({\n          type: INVALID_RESET_TOKEN,\n          payload: expiredToken\n        });\n      }\n      if (msg) {\n        dispatch({\n          type: INVALID_RESET_MSG,\n          payload: msg\n        });\n      }\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n\nexport const resetPassword = (newPassword, token, callback) => dispatch => {\n  dispatch(clearErrors());\n  dispatch(clearFlashMsg());\n  axios\n    .post(`/api/users/reset/${token}`, newPassword)\n    .then(res => {\n      dispatch({\n        type: FLASH_MSG,\n        payload: res.data\n      });\n    })\n    .then(() => {\n      callback.push(\"/login\");\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n","import React, { Component } from \"react\";\nimport TextFieldInput from \"../../components/common/TextField\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { loadReset, resetPassword } from \"../../actions/Reset\";\nimport { clearErrors } from \"../../actions/Errors\";\nimport { clearFlashMsg } from \"../../actions/Flash\";\nimport { Animated } from \"react-animated-css\";\nimport Spinner from \"../common/Spinner\";\n\nclass ResetForm extends Component {\n  state = {\n    password: \"\",\n    password2: \"\",\n    errors: {}\n  };\n\n  componentWillMount() {\n    const { clearErrors, clearFlashMsg } = this.props;\n    clearErrors();\n    clearFlashMsg();\n  }\n\n  componentDidMount() {\n    const { loadReset, match } = this.props;\n    loadReset(match.params.token);\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.errors) {\n      this.setState({\n        errors: newProps.errors\n      });\n    }\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleSelect = () => {\n    const { clearErrors } = this.props;\n    clearErrors();\n  };\n\n  handleResetSubmit = e => {\n    e.preventDefault();\n    const { password, password2 } = this.state;\n    const { history, match, resetPassword } = this.props;\n    const newPassword = {\n      password,\n      password2\n    };\n    resetPassword(newPassword, match.params.token, history);\n    this.setState({\n      password: \"\",\n      password2: \"\"\n    });\n  };\n\n  render() {\n    const { password, password2, errors } = this.state;\n    const { validToken, loading, expiredToken, msg } = this.props.reset;\n    if (validToken && !loading) {\n      return (\n        <div className=\"reset-form\">\n          <div className=\"container\">\n            <Animated animationIn=\"bounceIn\">\n              <form onSubmit={this.handleResetSubmit}>\n                <h3>Password Reset</h3>\n                <TextFieldInput\n                  title=\"Enter your new password\"\n                  name=\"password\"\n                  type=\"password\"\n                  info=\"Use 8 or more characters with a mix of letters, numbers & symbols\"\n                  value={password}\n                  onChange={this.handleChange}\n                  onSelect={this.handleSelect}\n                  error={errors.password}\n                />\n                <TextFieldInput\n                  title=\"Confirm your new password\"\n                  name=\"password2\"\n                  type=\"password\"\n                  info=\"Please make sure your confirmation password matches!\"\n                  value={password2}\n                  onChange={this.handleChange}\n                  onSelect={this.handleSelect}\n                  error={errors.password2}\n                />\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Reset\n                </button>\n              </form>\n            </Animated>\n          </div>\n        </div>\n      );\n    } else if (!validToken && loading) {\n      return <Spinner />;\n    } else if (expiredToken) {\n      return (\n        <div className=\"reset-error\">\n          <Animated animationIn=\"bounceIn\">\n            <div className=\"container\">\n              <div className=\"card\">\n                <h5 className=\"card-header\">Unable to complete request</h5>\n                <div className=\"card-body\">\n                  <p className=\"card-text\">{msg}</p>\n                  <Link to=\"/password\" className=\"btn btn-primary\">\n                    Get new token\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </Animated>\n        </div>\n      );\n    }\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    reset: state.reset,\n    errors: state.errors,\n    flash: state.flash\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { loadReset, resetPassword, clearErrors, clearFlashMsg }\n)(ResetForm);\n","import { SET_CURRENT_USER } from \"../actions/Types\";\nimport { isEmpty } from \"../helpers/validation\";\nconst INIT = {\n  isAuthenticated: false,\n  user: {},\n  loading: true\n};\n\nexport default function(state = INIT, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS, CLEAR_ERRORS } from \"../actions/Types\";\n\nconst INIT = {\n  errors: {}\n};\n\nexport default function(state = INIT, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    case CLEAR_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { FLASH_MSG, CLEAR_MSG } from \"../actions/Types\";\nconst INIT = {\n  msg: \"\"\n};\n\nexport default function(state = INIT, action) {\n  switch (action.type) {\n    case FLASH_MSG:\n      return action.payload;\n    case CLEAR_MSG:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import {\n  VALID_RESET_TOKEN,\n  INVALID_RESET_TOKEN,\n  INVALID_RESET_MSG\n} from \"../actions/Types\";\n\nconst INIT = {\n  msg: \"\",\n  validToken: false,\n  expiredToken: false,\n  loading: true\n};\n\nexport default function(state = INIT, action) {\n  switch (action.type) {\n    case VALID_RESET_TOKEN:\n      return {\n        validToken: action.payload,\n        loading: false\n      };\n    case INVALID_RESET_TOKEN:\n      return {\n        ...state,\n        expiredToken: action.payload,\n        loading: false\n      };\n    case INVALID_RESET_MSG:\n      return {\n        ...state,\n        msg: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./auth\";\nimport errorsReducer from \"./errors\";\nimport flashMsgReducer from \"./flash\";\nimport validResetTokenReducer from \"./reset\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorsReducer,\n  flash: flashMsgReducer,\n  reset: validResetTokenReducer\n});\n","export function isEmpty(val) {\n  return (\n    val === undefined ||\n    val === null ||\n    (typeof val === \"object\" && Object.keys(val).length === 0) ||\n    (typeof val === \"string\" && val.trim().length === 0)\n  );\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\nconst init = {},\n  middleWare = [thunk];\n\nconst store = createStore(\n  reducer,\n  init,\n  compose(\n    applyMiddleware(...middleWare),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport JwtDecoded from \"jwt-decode\";\nimport Navbar from \"../components/Navbar\";\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setCurrentUser, logoutUser } from \"../actions/Auth\";\nimport { setAuthHeader } from \"../helpers/set-token\";\nimport { createUser } from \"../actions/Auth\";\nimport { clearErrors } from \"../actions/Errors\";\nimport Private from \"../hoc/private\";\nimport Home from \"./Home\";\nimport Signup from \"./authentication/Signup\";\nimport Login from \"./authentication/Login\";\nimport Dashboard from \"./Dashboard\";\nimport Reset from \"./pw-reset/Reset\";\nimport ResetForm from \"./pw-reset/Reset-Form\";\nimport Spinner from \"./common/Spinner\";\nimport store from \"../redux-store\";\n\nfunction authCheck() {\n  try {\n    store.dispatch(setCurrentUser(JwtDecoded(localStorage.jwt)));\n  } catch (err) {\n    logoutUser();\n  }\n}\n\nclass App extends Component {\n  state = {\n    fullName: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n    errors: {}\n  };\n\n  componentWillMount() {\n    if (localStorage.jwt) {\n      setAuthHeader(localStorage.jwt);\n      authCheck();\n    }\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.errors) {\n      this.setState({\n        errors: newProps.errors\n      });\n    }\n  }\n\n  handleFieldChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleClearSelectErrors = () => {\n    const { clearErrors } = this.props;\n    clearErrors();\n  };\n\n  handleClearSignUp = e => {\n    const { clearErrors } = this.props;\n    e.preventDefault();\n    this.setState({\n      fullName: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\"\n    });\n    clearErrors();\n  };\n\n  render() {\n    return (\n      <Router>\n        <React.Fragment>\n          <Navbar />\n          <div className=\"main\">\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route\n                path=\"/signup\"\n                render={props => (\n                  <Signup\n                    {...props}\n                    onCreateUser={this.props.createUser}\n                    onFieldChange={this.handleFieldChange}\n                    onSelectClear={this.handleClearSelectErrors}\n                    onSignUpFieldClear={this.handleClearSignUp}\n                    signUpFullName={this.state.fullName}\n                    signUpEmail={this.state.email}\n                    signUpPassword={this.state.password}\n                    signUpPassword2={this.state.password2}\n                    errors={this.state.errors}\n                  />\n                )}\n              />\n              <Route\n                path=\"/login\"\n                render={props => (\n                  <Login\n                    {...props}\n                    onFieldChange={this.handleFieldChange}\n                    onSelectClear={this.handleClearSelectErrors}\n                    loginEmail={this.state.email}\n                    loginPassword={this.state.password}\n                    errors={this.state.errors}\n                  />\n                )}\n              />\n              <Route\n                path=\"/password\"\n                render={props => (\n                  <Reset\n                    {...props}\n                    onFieldChange={this.handleFieldChange}\n                    onSelectClear={this.handleClearSelectErrors}\n                    resetEmail={this.state.email}\n                    errors={this.state.errors}\n                  />\n                )}\n              />\n              <Route path=\"/reset/:token\" component={ResetForm} />\n              <Route path=\"/spinner\" component={Spinner} />\n              <Private path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n          </div>\n        </React.Fragment>\n      </Router>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    errors: state.errors\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { clearErrors, createUser }\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux-store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}